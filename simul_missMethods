for(yyy in c("chisq", "exp", "norm")){
    ######### MCAR ############
    alpha = 0.05
    n = 300
    MC = 100
    d = 3
    
    # Select the copula
    cp = claytonCopula(param = c(1), dim = d)
    # Generate the multivariate distribution (in this case it is just bivariate) with chisqal and t marginals
    P = mvdc(copula = cp, margins = c(rep(yyy,d)),  #chisq #exp # norm
             paramMargins = rep(list(1),d) )
    
    data = rMvdc(n, P)
    
    xxx = seq(0.05, 0.4, length.out=7)
    
    little_power = numeric(length = 7)
    our_power = numeric(length = 7)
    little_power_cov = numeric(length = 7)
    
    ind = 1
    for (p in xxx){
      little_decision_cov = logical(length = MC)
      little_decision = logical(length = MC)
      our_decision = logical(length = MC)
      for (i in 1:MC){
        X = delete_MCAR(data, p, c(1,2))
        
        little_decision_cov[i] = little_test(X, alpha)
        little_decision[i] = mcar_test(data.frame(X))$p.value < alpha
        our_decision[i] = MCAR_meancovTest(X, alpha = 0.05, B = 99, type = "np")
      }
      
      little_power_cov[ind] = mean(little_decision_cov, na.rm = TRUE)
      little_power[ind] = mean(little_decision, na.rm = TRUE)
      our_power[ind] = mean(our_decision, na.rm = TRUE)
      ind = ind+1
    }
    
    png(paste(yyy,"_","np","_MCAR.png"))
    plot(xxx, little_power, col="green", ylim = c(0,1), pch=18, 
         xlab = "Missingness probability p", ylab = "Size", type="b", main = "")
    lines(xxx, little_power_cov, col="orange", pch=18, type = "b")
    lines(xxx, our_power, col="blue", pch=18, type = "b")
    abline(h = alpha, col="red")
    legend("topleft",
           legend = c(TeX(r'($d^2_\mu$)'), TeX(r'($d^2_{aug}$)'), "NP bootstrap"),
           col = c("green", "orange", "blue"),
           pch = c(18, 18, 18))
    dev.off()
    
    ######### MAR ##############################
    alpha = 0.05
    n = 300
    MC = 100
    d = 3

    # Select the copula
    cp = claytonCopula(param = c(1), dim = d)
    # Generate the multivariate distribution (in this case it is just bivariate) with chisqal and t marginals
    P = mvdc(copula = cp, margins = c(rep(yyy,d)),
             paramMargins = rep(list(1),d) )

    data = rMvdc(n, P)

    xxx = xxx = seq(0.05, 0.4, length.out=7)

    little_power = numeric(length = 7)
    our_power = numeric(length = 7)
    little_power_cov = numeric(length = 7)

    ind = 1
    for (p in xxx){
      little_decision_cov = logical(length = MC)
      little_decision = logical(length = MC)
      our_decision = logical(length = MC)
      for (i in 1:MC){
        X = delete_MAR_rank(data, p, c(1,2), cols_ctrl = c(3, 3))

        little_decision_cov[i] = little_test(X, alpha)
        little_decision[i] = mcar_test(data.frame(X))$p.value < alpha
        our_decision[i] = MCAR_meancovTest(X, alpha = 0.05, B = 99, type = "np")
      }

      little_power_cov[ind] = mean(little_decision_cov, na.rm = TRUE)
      little_power[ind] = mean(little_decision, na.rm = TRUE)
      our_power[ind] = mean(our_decision, na.rm = TRUE)
      ind = ind+1
    }

    png(paste(yyy, "_", "np", "_MAR1.png"))
    plot(xxx, little_power, col="green", ylim = c(0,1), pch=18,
         xlab = "Missingness probability p", ylab = "Power", type="b", main = "")
    lines(xxx, little_power_cov, col="orange", pch=18, type = "b")
    lines(xxx, our_power, col="blue", pch=18, type = "b")
    abline(h = alpha, col="red")
    legend("right",
           legend = c(TeX(r'($d^2_\mu$)'), TeX(r'($d^2_{aug}$)'), "NP bootstrap"),
           col = c("green", "orange", "blue"),
           pch = c(18, 18, 18))
    dev.off()

    ######### MAR ##############################
    alpha = 0.05
    n = 300
    MC = 100
    d = 3

    # Select the copula
    cp = claytonCopula(param = c(1), dim = d)
    # Generate the multivariate distribution (in this case it is just bivariate) with chisqal and t marginals
    P = mvdc(copula = cp, margins = c(rep(yyy,d)),
             paramMargins = rep(list(1),d))

    data = rMvdc(n, P)

    xxx = xxx = seq(0.05, 0.4, length.out=7)

    little_power = numeric(length = 7)
    our_power = numeric(length = 7)
    little_power_cov = numeric(length = 7)

    ind = 1
    for (p in xxx){
      little_decision_cov = logical(length = MC)
      little_decision = logical(length = MC)
      our_decision = logical(length = MC)
      for (i in 1:MC){
        X = delete_MAR_1_to_x(data, p, c(1,2), cols_ctrl = c(3, 3), x = 9)

        little_decision_cov[i] = little_test(X, alpha)
        little_decision[i] = mcar_test(data.frame(X))$p.value < alpha
        our_decision[i] = MCAR_meancovTest(X, alpha = 0.05, B = 99, type = "np")
      }

      little_power_cov[ind] = mean(little_decision_cov, na.rm = TRUE)
      little_power[ind] = mean(little_decision, na.rm = TRUE)
      our_power[ind] = mean(our_decision, na.rm = TRUE)
      ind = ind+1
    }

    png(paste(yyy, "_", "np", "_MAR2.png"))
    plot(xxx, little_power, col="green", ylim = c(0,1), pch=18,
         xlab = "Missingness probability p", ylab = "Power", type="b", main = "")
    lines(xxx, little_power_cov, col="orange", pch=18, type = "b")
    lines(xxx, our_power, col="blue", pch=18, type = "b")
    abline(h = alpha, col="red")
    legend("right",
           legend = c(TeX(r'($d^2_\mu$)'), TeX(r'($d^2_{aug}$)'), "NP bootstrap"),
           col = c("green", "orange", "blue"),
           pch = c(18, 18, 18))
    dev.off()
}
